TCP통신
TCP 통신을 위해서는 연결을 미리 만들어 놓고 시작한다.
Socket을 통해서 데이터를 주고 받음
데이터를 주고 받는 장치간 연결해주는 Socket을 만들어 놓고 시작한다.

데이터를 보내는 쪽과 받는 쪽의 역할이 다름
처음에 데이터를 보내기 위해서 연결 요청이 필요

echo Server:내가 보낸 메시지를 그대로 다시 전달하는 서버
TcpClient2, TcpServer2 클래스 작성하기
TcpClient2 : 연결 맺고 나서 하는 일은 메시지 보내고 나서 받기 반복
TcpServer2 : 연결 맺고나서 메시지 받고 나서 보내기 반복


TCP 1:1 채팅 만들기
hint 
1. TCP는 연결 요청하는 쪽과 연결 받는 쪽이 따로 존재해야 한다
2. 보내고 받기 위해서는 둘다 같은 socket을 이용한다 
3. 보내는 기능과 받기 기능은 동시에 실행되어야 한다. (Thread)  
4. 보내고 받는 기능과 소켓 생성 기능을 분리하면 편하다....  


TcpClient1(소켓 연결 요청하는 채팅 클라이언트)
TcpClient2(소켓 연결 요청 수락하는 채팅 클라이언트)
Sender
Receiver

여전히 1:1 채팅
1. 아까전에 만들 Sender, Receiver, Topclient1을 그대로 활용
2. 서버는 메시지를 받아서 상대방에게 주는 동작을 동시에 진행 해야 한다.
서버는 각 소켓으로 부터 메시지를 받아서 처리하는 기능이 병력적으로 수행되어야 한다
총 스레드는 6개(각 클라이언트 2개씩 서버 2개)

순서대로 진행
1. 서버를 실행하면 서버는 2개의 클라이언트로 부터 요청이 들어오기를 기다린다.
2. 2개의 클라이언트로 부터 요청이 모두 들어오면, 각 클라이언트로 부터 들어오는 메시지를 받아서, 
다른 클라이언트에게 전달한다.



